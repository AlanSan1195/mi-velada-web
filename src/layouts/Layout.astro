---
import LightsBackground from '@/components/LightsBackground.astro';
import NoiseBackground from '@/components/NoiseBackground.astro';
import SmokeBackgorund from '@/components/SmokeBackgorund.astro';
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Evento de streamers" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href="" />
    <title>{title}</title>
  </head>
  <body
    class="dark [&_:focus-visible]:outline-none [&_:focus-visible]:ring-2 [&_:focus-visible]:ring-primary"
  >
 <LightsBackground/>
  <!-- <NoiseBackground/> -->
  <!-- <SmokeBackgorund /> -->
    <!-- //parece que este es la luz -->
    <!-- <div class="container relative -z-10 mx-autow w-screen overflow-x-clip">
      <img
        aria-hidden="true"
        src="/lights.svg"
        class="absolute top-0 w-screen transform-gpu opacity-0 brightness-200 bri md:scale-125 lg:left-0 lsg:scale-100"
        onload="this.classList.add('animate-fade-in', 'animate-duration-800')"
        alt="Foco de Luz"
      />
    </div> -->
   
    <!-- centramos la pagina -->
    <div class="mx-auto min-h-screen max-w-6xl px-2 pt-16 selection:bg-primary selection:text-secondary md:pt-20 lg:px-10">
      <slot />
    </div>
  </body>
</html>
<style is:global>
  :root{
    --color-primary: #ddd;
    --color-secondary: #333;
    --color-verde: #d5ff00;

    --background-color: #101010;
    --backgroun-twitch: var(--color-twitch-ice);

    --color-twitch: #6441A4;
    --color-twitch-ice: #f0f0ff
  }
  html {
    background-color: var(--background-color);
    font-family: system-ui, sans-serif;
  
  }
  body {
    font-family: "Jost Variable", sans-serif;
  }
  
	@keyframes lights {
		from {
			background-position:
				50% 50%,
				50% 50%;
		}
		to {
			background-position:
				350% 50%,
				350% 50%;
		}
	}

	.lights {
		--stripesDark: repeating-linear-gradient(
			100deg,
			#000 0%,
			#000 7%,
			transparent 10%,
			transparent 12%,
			#000 16%
		);
		--rainbow: repeating-linear-gradient(100deg, var(--color-accent) 10%, var(--color-accent) 30%);
		background-size: 200%, 400%;
		background-position:
			50% 50%,
			50% 50%;

		background-image: var(--stripesDark), var(--rainbow);
		filter: blur(10px) opacity(50%) saturate(200%);

		mask-image: radial-gradient(ellipse at 100% 0%, black 40%, transparent 70%);

		pointer-events: none;
		z-index: -20;
		position: absolute;
		inset: 0;
		opacity: 0.5;
	}

	.lights::after {
		content: "";
		position: absolute;
		inset: 0;
		background-size: 200%, 100%;
		animation: lights 80s linear infinite;
		background-attachment: fixed;
		mix-blend-mode: difference;
		background-image: var(--stripesDark), var(--rainbow);
	}
  
  
</style>
