<div id="smoke-bkg" class="fixed top-0 h-full w-full"></div>

<script>
  //importamos la biobleoteca de Three.js

  import * as THREE from "three";

  const $bkg = document.getElementById("smoke-bkg");

  let w = window.innerWidth;
  let h = window.innerHeight;

  //inicializar Three.js
  // 3 cosas basiscas:   Escena, Camara, Rednderizador

  //Escena
  const scene = new THREE.Scene();

  //Camara   el "h" es el frente y la "w" es los lados 1000 es la maxima para que mas ya no s eve esta muy lejos
  const camara = new THREE.PerspectiveCamera(75, w / h, 1, 1000);
  //activamos la profundidad deceada
  camara.position.z = 10;
  //a esta ecena le agregamos la camara
  scene.add(camara);

  //Renderizador ▶️   HAY DIFERENTES TIPOS PERO USAREMOS EL WEBGL
  const renderer = new THREE.WebGLRenderer();
  renderer.setSize(w, h);

  //color de fondo
  renderer.setClearColor(0x999999, 1);

  $bkg?.appendChild(renderer.domElement);

  // para crear un objeto neceitamos 3 cosas
  //1. gueometria
  const geometry = new THREE.BoxGeometry(1, 1, 1);

  // 2. Material
  const material = new THREE.MeshBasicMaterial({
    color: 0x00ff00,
  });
  //3. Malla
  const cube = new THREE.Mesh(geometry, material);
  //   scene.add(cube);

  //crea muna luz
  const light = new THREE.DirectionalLight(0xffffff, 0.5);
  light.position.set(-1, 3, 1);
  scene.add(light);
  const helper = new THREE.DirectionalLightHelper(light, 9);
  // scene.add(helper);

  // crear particulas de humo
  const smokeParticles = [];

  const loader = new THREE.TextureLoader();
  loader.crossOrigin = ""; //<--- en locallhost no pasa nada pero si desplegamos a un servidor puede ser necesario

  loader.load("/smoke.webp", (texture) => {
    // 1. Geometria
    //crear un plano geometrico de 300 x 300
    const smokeGeo = new THREE.PlaneGeometry(300, 300);

    //2. Material
    const smikeMaterial = new THREE.MeshLambertMaterial({
      map: texture,
      transparent: true,
    });

    // 3. Malla
    //creeamos las particulas y las posicionamos aleatoriamente
    const NUM_OF_PARTICLES = 300;

    for (let p = 0; p < NUM_OF_PARTICLES; p++) {
      const particle = new THREE.Mesh(smokeGeo, smikeMaterial);

      particle.position.set(
        Math.random() * 500 - 250,
        Math.random() * 400 - 250,
        Math.random() * 1200 - 100
      );

      particle.rotation.z = Math.random() * 360;
      scene.add(particle);
      smokeParticles.push(particle);
      function animateSmoke() {
        requestAnimationFrame(animateSmoke);
        particle.rotation.z += 0.001;
        particle.position.y += 0.02;
        particle.position.x += 0.04;
      }
      animateSmoke();
    }

    const smokeMesh = new THREE.Mesh(smokeGeo, smikeMaterial);
  });

  // funcionn para arrgelar el Rizise de la camara cuando la pantalla se agrande o se achique 
  function rezise(){
    w = innerWidth;
    h = innerHeight;
    camara.aspect = w / h; // actualizar aspecto de la camara
    camara.updateProjectionMatrix(); // este metodo de THREE.js se tiene que ejecutar siempre que cambiemos los parametros de la camara
    renderer.setSize(w, h); // actualizar el tamaño del renderizador 

  }

  // animamos la ecena
  function animate() {
    //ir llamando en cada frame a esta funciion que anima
    requestAnimationFrame(animate);

    //renderizamos la escena
    renderer.render(scene, camara);
  }
  //llamamos a la funcion animate para que se ejecute en cada frame
  animate();
  window.addEventListener("resize", rezise);
</script>
